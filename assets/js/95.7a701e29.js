(window.webpackJsonp=window.webpackJsonp||[]).push([[95],{443:function(_,t,a){"use strict";a.r(t);var v=a(42),s=Object(v.a)({},(function(){var _=this,t=_.$createElement,a=_._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h3",{attrs:{id:"攻击手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#攻击手段"}},[_._v("#")]),_._v(" 攻击手段")]),_._v(" "),a("h3",{attrs:{id:"一、xss攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、xss攻击"}},[_._v("#")]),_._v(" 一、XSS攻击")]),_._v(" "),a("p",[_._v("XSS 攻击是指浏览器中执行恶意脚本(无论是跨域还是同域)，从而拿到用户的信息并进行操作。")]),_._v(" "),a("p",[_._v("一般可以完成下列事情：")]),_._v(" "),a("ul",[a("li",[_._v("窃取Cookie。")]),_._v(" "),a("li",[_._v("监听用户行为，比如输入账号密码后直接发送到黑客服务器。")]),_._v(" "),a("li",[_._v("修改 DOM 伪造登录表单。")]),_._v(" "),a("li",[_._v("在页面中生成浮窗广告。")])]),_._v(" "),a("h4",{attrs:{id:"_1-反射型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-反射型"}},[_._v("#")]),_._v(" \b1. 反射型")]),_._v(" "),a("p",[_._v("反射型XSS指的是恶意脚本作为网络请求的一部分。")]),_._v(" "),a("h4",{attrs:{id:"_2-存储型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-存储型"}},[_._v("#")]),_._v(" \b2. 存储型")]),_._v(" "),a("p",[_._v("存储型的 XSS 将脚本存储到了服务端的数据库，然后在客户端执行这些脚本，从而达到攻击的效果。")]),_._v(" "),a("h4",{attrs:{id:"_3-dom型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-dom型"}},[_._v("#")]),_._v(" \b3. DOM型")]),_._v(" "),a("p",[_._v("文档型的 XSS 攻击并不会经过服务端，而是作为中间人的角色，在数据传输过程劫持到网络数据包，然后修改里面的 html 文档！")]),_._v(" "),a("h4",{attrs:{id:"_4-防范手段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-防范手段"}},[_._v("#")]),_._v(" 4.防范手段")]),_._v(" "),a("ul",[a("li",[_._v("一个信念: 不要相信用户的输入，对输入内容转码或者过滤，让其不可执行。")]),_._v(" "),a("li",[_._v("两个利用: 利用 CSP，利用 Cookie 的 HttpOnly 属性。")])]),_._v(" "),a("h3",{attrs:{id:"二、csrf攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、csrf攻击"}},[_._v("#")]),_._v(" 二、CSRF攻击")]),_._v(" "),a("p",[_._v("跨站请求伪造，指的是黑客诱导用户点击链接，打开黑客的网站，然后黑客利用用户目前的登录状态发起跨站请求。")]),_._v(" "),a("ul",[a("li",[_._v("自动发送GET请求")]),_._v(" "),a("li",[_._v("自动发送POST请求")]),_._v(" "),a("li",[_._v("\b诱导点击发送GET请求")])]),_._v(" "),a("h4",{attrs:{id:"_1-防范措施"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-防范措施"}},[_._v("#")]),_._v(" 1.防范措施")]),_._v(" "),a("p",[_._v("1.利用Cookie的SameSite属性")]),_._v(" "),a("p",[_._v("SameSite可以设置为三个值，Strict、Lax和None。")]),_._v(" "),a("ul",[a("li",[_._v("a. 在Strict模式下，浏览器完全禁止第三方请求携带Cookie。比如请求sanyuan.com网站只能在sanyuan.com域名当中请求才能携带 Cookie，在其他网站请求都不能。")]),_._v(" "),a("li",[_._v("b. 在Lax模式，就宽松一点了，但是只能在 get 方法提交表单况或者a 标签发送 get 请求的情况下可以携带 Cookie，其他情况均不能。")]),_._v(" "),a("li",[_._v("c. 在None模式下，也就是默认模式，请求会自动携带上 Cookie。")])]),_._v(" "),a("p",[_._v("2.验证来源站点")]),_._v(" "),a("ul",[a("li",[_._v("origin 只包含域名信息")]),_._v(" "),a("li",[_._v("Referer 包含完整的URL路径")])]),_._v(" "),a("p",[_._v("3.Token")]),_._v(" "),a("p",[_._v("4.验证码")])])}),[],!1,null,null,null);t.default=s.exports}}]);